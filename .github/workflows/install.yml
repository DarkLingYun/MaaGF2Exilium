name: install

on:
  push:
    tags:
      - "v*"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          tag=$(git describe --tags --match "v*" ${{ github.ref }} || true)
          if [[ $tag != v* ]]; then
            tag=$(curl -sX GET "https://api.github.com/repos/${{ github.repository }}/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]')
            if [[ $tag != v* ]]; then
              tag="v0.0.0"
            fi
            tag=$(date "+$tag-%y%m%d-$(git rev-parse --short HEAD)")
          fi
          if ! $($is_release) ; then
            prefix=${tag%-*-*}
            suffix=${tag#$prefix-}
            tag="$prefix-ci.$suffix"
          fi

          echo tag=$tag | tee -a $GITHUB_OUTPUT
          echo is_release=$is_release | tee -a $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      is_release: ${{ steps.set_tag.outputs.is_release }}

  update:
    needs: meta
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: update
        shell: bash
        run: |
          mkdir -p ./update
          rsync -av --exclude='MaaCommonAssets' ./assets/ ./update/


      - uses: actions/upload-artifact@v4
        with:
          name: update
          path: "update"

  build:
    needs: meta
    strategy:
      matrix:
        include:
          - os: windows-latest
            os_name: win
            mfa_os_name: win
            arch: aarch64
            mfa_arch: arm64
          - os: windows-latest
            os_name: win
            mfa_os_name: win
            arch: x86_64
            mfa_arch: x64
          - os: macos-latest
            os_name: macos
            mfa_os_name: osx
            arch: aarch64
            mfa_arch: arm64
          - os: macos-latest
            os_name: macos
            mfa_os_name: osx
            arch: x86_64
            mfa_arch: x64
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1
        with:
          repository: MaaXYZ/MaaFramework
          fileName: "MAA-${{ matrix.os_name }}-${{ matrix.arch }}*"
          latest: true
          out-file-path: "deps"
          extract: true

      - name: Download MFAAvalonia
        uses: robinraju/release-downloader@v1
        with:
          repository: SweetSmellFox/MFAAvalonia
          fileName: "*-${{ matrix.mfa_os_name }}-${{ matrix.mfa_arch }}*"
          latest: true
          out-file-path: "MFA"
          extract: true

      - name: Clean up MFA archive files
        shell: bash
        run: |
          # Remove any remaining archive files after extraction
          find ./MFA -type f \( -name "*.zip" -o -name "*.tar" -o -name "*.tar.gz" -o -name "*.7z" -o -name "*.rar" \) -delete
          echo "Cleaned up archive files in MFA directory"

      - name: Install
        shell: bash
        run: |
          python ./install.py ${{ needs.meta.outputs.tag }}
          if [ "${{ matrix.os_name }}" = "win" ]; then
            jq --arg url "https://github.com/DarkLingYun/MaaGF2Exilium" --arg version "${{ needs.meta.outputs.tag }}" '. + {"url": $url, "version": $version}' ./assets/interface.json > ./install/interface.json
          fi
          
      - uses: actions/upload-artifact@v4
        with:
          name: MaaGF2ExiliumGUI-${{ matrix.os_name }}-${{ matrix.arch }}
          path: "install"
        
  release:
    if: ${{ needs.meta.outputs.is_release == 'true' }}
    needs: [meta, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd "$f" && 7z a -tzip ../"$f-${{ needs.meta.outputs.tag }}.zip" .)
          done
      - uses: softprops/action-gh-release@v2
        with:
          files: assets/*
          tag_name: ${{ needs.meta.outputs.tag }}
          append_body: true
          body: |
            [已有 Mirror酱 CDK? 前往Mirror酱高速下载](https://mirrorchyan.com/zh/projects?rid=MaaGF2Exilium)

      - name: Trigger MirrorChyanUploading
        run: |
          gh workflow run --repo $GITHUB_REPOSITORY mirrorchyan
          gh workflow run --repo $GITHUB_REPOSITORY mirrorchyan_release_note
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
